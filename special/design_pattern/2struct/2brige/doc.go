package _brige

/*
    《理解/定义》
    将抽象和实现解耦，让他们可以独立变化
    一个类存在两个（或多个）独立变化的维度，我们通过组合的方式，让这两个（或多个）维度可以独立进行拓展

    《例子》：监控告警
    有不同的告警类型，有不同的通知类型
    将通知类型和告警类别进行拆分成两个类，将通知类型作为参数传递给通知类即可

    《总结》：很多设计模式都是视图将庞大的类拆分成更细小的类，然后再通过某种更合理的结构组装在一起

    《补充》
    可能因为基本理念比较简单，博客本体并没有做过多说明，甚至觉得说的也太差了

    如果一个系统需要在抽象化和具体化之间增加更多的灵活性，避免在两个层次之间建立静态的继承关系，通过桥接模式可以使它们在抽象层建立一个关联关系。

    “抽象部分”和“实现部分”可以以继承的方式独立扩展而互不影响，在程序运行时可以动态将一个抽象化子类的对象和一个实现化子类的对象进行组合，即系统需要对抽象化角色和实现化角色进行动态耦合。
    一个类存在两个（或多个）独立变化的维度，且这两个（或多个）维度都需要独立进行扩展。
    对于那些不希望使用继承或因为多层继承导致系统类的个数急剧增加的系统，桥接模式尤为适用。
 */